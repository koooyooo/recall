meta:
  deck:
    ja: "SDI セキュリティ"
    en: "SDI Security"
  lang: "ja"
cards:
  - id: rate-limit
    term:
      ja: "レート制限 (Rate Limiting)"
      en: "Rate Limiting"
    definition: "クライアントからのリクエスト頻度を制御し、システムの過負荷や乱用を防ぐための仕組みです。"
    explanation: |
      レート制限は、APIサーバーなどを保護するための重要な技術です。主要なアルゴリズムには以下のようなものがあります。
      - Token Bucket: 一定のレートでトークンが補充されるバケツを用意し、リクエスト毎にトークンを消費します。
        トークンがあればリクエストを許可し、なければ拒否します。バースト性のあるリクエストに対応しやすいのが特徴です。
      - Leaky Bucket: リクエストをキューに入れ、一定のレートで処理します。
        キューが溢れると新しいリクエストは拒否されます。リクエストレートを平滑化する効果があります。
      - Fixed Window Counter: 固定された時間窓（例: 1分ごと）でリクエスト数をカウントし、上限を超えたら拒否します。
        実装が容易ですが、窓の境界でリクエストが集中する可能性があります。
      - Sliding Window Log/Counter: 直近のタイムスタンプを記録したり、複数の時間窓のカウンターを重み付けして計算することで、
        Fixed Windowの境界問題を緩和した、より公平な制限を実現します。
    tags: [security, api, architecture, reliability]
    notes:
      - "Token Bucket: バーストトラフィックを許容するのに適している"
      - "Leaky Bucket: 安定したアウトプットレートを保証するのに適している"
      - "Sliding Window: 精度と実装コストのバランスが良い"
      - "HTTP 429 (Too Many Requests) ステータスコードでクライアントに通知するのが一般的"
    url:
      - "https://cloud.google.com/architecture/rate-limiting-strategies-techniques"

  - id: waf
    term:
      ja: "WAF (Web Application Firewall)"
      en: "WAF (Web Application Firewall)"
    definition: "WAFは、Webアプリの代表的攻撃をフィルタするものです。"
    explanation: |
      WAFは、Webアプリケーションの前面に配置され、HTTP/HTTPSトラフィックを監視・フィルタリングすることで、
      一般的な脆弱性を狙った攻撃からアプリケーションを保護するセキュリティ機能です。
      SQLインジェクション、クロスサイトスクリプティング(XSS)、OSコマンドインジェクションなどの攻撃パターンを検知し、ブロックします。
      既知の攻撃パターンに対する防御だけでなく、機械学習を活用して未知の脅威にも対応するWAFも登場しています。
      Webアプリケーションのセキュリティを強化する上で重要な役割を果たします。
    tags: [security]
    notes:
      - "シグネチャベースのマッチングが基本だが、機械学習で未知の攻撃を検知するWAFもある"
      - "OWASP Top 10に挙げられるような脆弱性への対策に有効"
      - "L7（アプリケーション層）での防御を提供する"
      - "クラウドサービスとして提供されるWAF（例: Cloud Armor, AWS WAF）も多い"

  - id: authn-authz
    term:
      ja: "AuthN / AuthZ (Authentication / Authorization)"
      en: "AuthN / AuthZ (Authentication / Authorization)"
    definition: "AuthN / AuthZは、認証と認可です。"
    explanation: |
      認証（Authentication, AuthN）は、「あなたが誰であるか」を確認するプロセスです。
      IDとパスワードの入力や、MFA（多要素認証）などがこれにあたります。
      一方、認可（Authorization, AuthZ）は、「あなたに何をする権限があるか」を決定するプロセスです。
      認証されたユーザーが、特定のデータにアクセスしたり、操作を実行したりする許可があるかどうかを検証します。
      これら二つの概念は密接に関連していますが、異なる役割を持ち、セキュリティシステム設計の基礎となります。
    tags: [security]
    notes:
      - "OAuth 2.0は認可のフレームワーク"
      - "OpenID Connect (OIDC) は認証のプロトコル"
      - "認証は「Who are you?」、認可は「What can you do?」"
      - "ロールベースアクセス制御（RBAC）や属性ベースアクセス制御（ABAC）は認可の具体的な実装例"
