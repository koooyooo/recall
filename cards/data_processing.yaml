meta:
  deck:
    ja: "SDI データ処理"
    en: "SDI Data Processing"
  lang: "ja"
cards:
  - id: observability
    term:
      ja: "可観測性"
      en: "Observability"
    definition: "可観測性とは、システムの内部状態を外部から推測できる度合いです。"
    explanation: |
      可観測性とは、システムの外部から得られる情報（ログ、メトリクス、トレース）を用いて、
      システムの内部状態や動作をどれだけ詳細に理解できるかを示す特性です。
      特に分散システムにおいて、問題発生時の原因特定やパフォーマンス分析に不可欠です。
      ログはイベントの詳細な記録、メトリクスは数値データ（CPU使用率、リクエスト数など）、
      トレースはリクエストがシステムを横断する際の経路と時間を可視化します。
      これらの情報を統合的に分析することで、システムの健全性を把握し、予期せぬ問題にも迅速に対応できるようになります。
    tags: [observability, monitoring, logging, tracing]
    notes:
      - "ログ: イベントの詳細な記録、デバッグや監査に利用"
      - "メトリクス: 数値データ（CPU使用率、リクエスト数など）、システムの傾向把握に利用"
      - "トレース: リクエストがシステムを横断する際の経路と時間を可視化、分散システムでのボトルネック特定に利用"
      - "可観測性は、システムの「なぜ」を理解するために重要"
    url:
      - "https://www.honeycomb.io/what-is-observability/"

  - id: etl
    term:
      ja: "ETL"
      en: "ETL (Extract, Transform, Load)"
    definition: "ETLは、異なるデータソースからデータを抽出し、変換し、ターゲットシステムにロードするプロセスです。"
    explanation: |
      ETLは、Extract（抽出）、Transform（変換）、Load（ロード）の頭文字を取ったもので、
      データウェアハウスやデータレイクにデータを統合する際の一般的なプロセスです。
      Extractフェーズでは、様々なデータソース（データベース、ファイル、APIなど）から必要なデータを抽出します。
      Transformフェーズでは、抽出したデータを分析に適した形式に変換（クレンジング、集計、結合など）します。
      Loadフェーズでは、変換されたデータをターゲットシステム（データウェアハウス、データレイクなど）にロードします。
      バッチ処理が一般的ですが、リアルタイムETLも存在します。
    tags: [data-engineering, data-pipeline, data-warehouse]
    notes:
      - "Extract: データソースからデータを抽出"
      - "Transform: 抽出したデータを変換、クレンジング、集計"
      - "Load: 変換したデータをターゲットシステムにロード"
      - "データウェアハウスやデータレイク構築の基盤となるプロセス"
    url:
      - "https://en.wikipedia.org/wiki/Extract,_transform,_load"
