meta:
  deck:
    ja: "SDI ネットワーク"
    en: "SDI Network"
  lang: "ja"
cards:
  - id: dns
    term:
      ja: "DNS (Domain Name System)"
      en: "DNS (Domain Name System)"
    definition: "人間が読みやすいドメイン名（例: www.google.com）を、コンピュータが理解できるIPアドレス（例: 172.217.167.68）に変換するシステムです。"
    explanation: |
      DNSは、インターネット上の住所録のような役割を果たします。
      ユーザーがブラウザにドメイン名を入力すると、DNSリゾルバが階層的に構成されたDNSサーバー群に問い合わせを行い、
      対応するIPアドレスを取得します。
      この名前解決のプロセスにより、ユーザーは覚えにくいIPアドレスを意識することなく、
      ウェブサイトや各種サービスにアクセスできます。
      DNSのレコードには、IPアドレスを示すAレコードの他に、MX（メールサーバー）、CNAME（別名）など様々な種類があります。
    tags: [network, infrastructure]
    notes:
      - "階層的な分散データベースシステムとして実装されている"
      - "DNSクエリの結果は、パフォーマンス向上のために各レベルでキャッシュされる（TTLが設定されている）"
      - "DNSラウンドロビンを利用して、簡易的な負荷分散を行うことも可能"
    url:
      - "https://en.wikipedia.org/wiki/Domain_Name_System"

  - id: tcp-udp
    term:
      ja: "TCP vs UDP"
      en: "TCP vs UDP"
    definition: "TCPは信頼性を重視したコネクション型のプロトコルであり、UDPは速度を重視したコネクションレス型のプロトコルです。"
    explanation: |
      TCP (Transmission Control Protocol) は、データを送信する前に相手と接続を確立し（3ウェイハンドシェイク）、
      データの到達を順序通りに保証し、失われたパケットは再送します。
      信頼性が高い反面、オーバーヘッドが大きくなります。HTTP、FTP、SMTPなどで利用されます。
      UDP (User Datagram Protocol) は、接続を確立せず、データを一方的に送りつけます（投げっぱなし）。
      到達保証や順序保証はなく、信頼性は低いですが、非常に高速で軽量です。
      DNS、VoIP、オンラインゲーム、ビデオストリーミングなど、速度が重視される場面で利用されます。
    tags: [network, protocol]
    notes:
      - "TCP: 信頼性、順序保証、フロー制御、輻輳制御あり。コネクション型。"
      - "UDP: 信頼性、順序保証なし。コネクションレス型。高速・軽量。"
      - "QUIC（HTTP/3で使用）はUDPをベースにTCPの信頼性機能を取り込んでいる"
    url:
      - "https://en.wikipedia.org/wiki/Transmission_Control_Protocol"
      - "https://en.wikipedia.org/wiki/User_Datagram_Protocol"

  - id: dns-round-robin
    term:
      ja: "DNSラウンドロビン"
      en: "DNS Round Robin"
    definition: "一つのドメイン名に対して複数のIPアドレスを登録し、問い合わせごとにその順番を循環させて応答することで、簡易的な負荷分散を行う仕組みです。"
    explanation: |
      DNSラウンドロビンは、DNSの仕組みを利用した最もシンプルな負荷分散技術の一つです。
      クライアントからのDNSクエリに対し、登録されているIPアドレスのリストを順番に入れ替えながら応答します。
      これにより、異なるクライアントからのリクエストが異なるサーバーに振り分けられることが期待できます。
      特別なハードウェアが不要で低コストに実現できる反面、サーバーの障害を自動的に検知できない、
      均等に負荷が分散されるとは限らない、DNSキャッシュによる偏りが生じやすいといった欠点もあります。
    tags: [network, dns, load-balancing]
    notes:
      - "サーバーの死活監視を行わないため、障害のあるサーバーのIPアドレスも応答してしまう"
      - "クライアント側のDNSキャッシュにより、負荷が偏る可能性がある"
      - "セッション維持ができない"
      - "本格的な負荷分散には専用のロードバランサーが推奨される"
    url:
      - "https://en.wikipedia.org/wiki/Round-robin_DNS"
